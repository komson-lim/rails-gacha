.container
  %h1 Inventory
  %table.table{id: "inv"}
    %thead
      %tr
        %th #
        %th Name
        %th Rarity
        %th Price
        %th Obtain at
        %th
    %tbody
      - @inventories.each_with_index do |inv, idx|
        %tr
          %th{scope: "row"}= idx+1
          %td=inv.name
          %td=inv.rarity
          %td{id: "price-id-#{inv.iid}"}=inv.price
          %td=DateTime.parse(inv.created_at.to_s).in_time_zone(7).strftime("%d/%m/%Y %H:%M:%S")
          %td{id: "item-id-#{inv.iid}", class: "status","data-status": inv.status == "sell" ? "unsell" : "sell"}
            - if (inv.status == "sell")
              = button_to "unsell", "/sellItem", class: "btn btn-primary", params: {item_id: inv.iid}, remote: true
            - else
              = button_to "sell", "/sellItem", class: "btn btn-primary", params: {item_id: inv.iid}, remote: true
            
.modal.fade{"aria-hidden" => "true", "aria-labelledby" => "modalTitle", :tabindex => "-1", id: "sell-modal"}
  .modal-dialog
    .modal-content
      .modal-header
        %h5#modalTitle.modal-title Sell
        %button.btn-close.close-modal{"aria-label" => "Close", "data-bs-dismiss" => "modal", :type => "button"}
      =form_with url: "/sellItem", local: false do |f|
        .modal-body
          %ul{id: "modal-list"}
            = f.number_field :price
            = f.hidden_field :item_id, value: 1
        .modal-footer
          -# =f.button :submit
          %button.btn.btn-primary{type: "submit", id: "sellButton"} Submit
          -# = button_to "sell", "/sellItem", class: "btn btn-primary", params: {item_id: 1}, remote: true, id: "sellButton", "data-item": 1
          %button.btn.btn-secondary.close-modal{"data-bs-dismiss" => "modal", :type => "button"} Close

:javascript
  var observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
    if (mutation.type === "attributes") {
      console.log("attributes changed")
      var btn = mutation.target.childNodes[1].childNodes[0]
      btn.value = mutation.target.getAttribute("data-status")
      console.log(btn.value)
      if (mutation.target.getAttribute("data-status") === "sell"){
        btn.type = "button"
      }else{
        btn.type = "submit"
      }
    }
    });
    });
  function addBtnAction(){
    console.log("SDJfkljdfl")
    document.querySelectorAll(".status").forEach(e =>{
    e.addEventListener("ajax:success", (event) => {
      const [data,status,xhr] = event.detail
      var id = e.getAttribute('id').split("-")[2]
      document.querySelector(`#price-id-${id}`).textContent = data['price']
    })
    var btn = e.childNodes[1].childNodes[0]
    if (e.getAttribute("data-status") === "sell"){
      btn.type = "button"
    }else{
      btn.type = "submit"
    }
    var myModal = new bootstrap.Modal(document.getElementById('sell-modal'), {});
    document.getElementById('sell-modal').addEventListener("ajax:success", (event) => {
        const [data, status, xhr] = event.detail
        var id = document.querySelector('#item_id').value
        document.querySelector(`#price-id-${id}`).textContent = data['price']
        myModal.hide()
      })
    btn.onclick = () => {   
      if (e.getAttribute("data-status") === "sell"){
        myModal.show()
        var selected = e.getAttribute("id").split("-")[2]
        // document.querySelector('#sellButton').setAttribute('data-item', selected)
        document.querySelector("#item_id").value = selected
        // document.querySelector('.modal-footer > .button_to').childNodes[2].value = selected
      } else{
        e.setAttribute("data-status", "sell")
        e.childNodes[1].requestSubmit()
      }
    }
  var sellButton = document.querySelector('#sellButton')
  sellButton.onclick = () =>{
    // console.log(sellButton.getAttribute('data-item'))
    console.log("KSDLJFLJDKFLJDLFJLKDFJLF")
    document.querySelector(`#item-id-${document.querySelector("#item_id").value}`).setAttribute("data-status", "unsell")
  }
  observer.observe(e,{
      attributes: true
    })
  })
  }
  var table = $('#inv').DataTable();
  addBtnAction()

  
  $('#inv').on('page.dt', function () {
    var info = table.page.info();
    addBtnAction()
    setTimeout(addBtnAction, 5)
    console.log('Showing page: '+info.page+' of '+info.pages);
  } );
  
